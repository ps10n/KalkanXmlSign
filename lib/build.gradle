/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    //id "com.github.johnrengelman.shadow" version "7.1.2"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    flatDir {
        dirs 'src/main/resources'
    }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'

    implementation group: 'kz.gov.pki.kalkan', name: 'kalkancrypt', version: '0.1.1'
    implementation group: 'kz.gov.pki.kalkan', name: 'kalkancrypt_xmldsig', version: '0.1'

    //implementation 'javax.xml.ws:jaxws-api:2.3.1'
    implementation 'org.apache.cxf:cxf-rt-wsdl:3.2.7'
    //implementation 'javax.jws:javax.jws-api:1.1'
    //implementation 'javax.xml.soap:javax.xml.soap-api:1.4.0'

    /*implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
    implementation 'com.sun.xml.bind:jaxb-xjc:2.3.0.1'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.2'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'*/
    implementation 'com.sun.xml.messaging.saaj:saaj-impl:1.3.28'
    //implementation 'jakarta.xml.ws:jakarta.xml.ws-api:3.0.0'

    implementation group: 'org.apache.ws.security', name: 'wss4j', version: '1.5.11'
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.8.1')
        }
    }
}

java {
    //withSourcesJar()
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': rootProject.name,
                'Implementation-Version': project.version,
                'Built-By': 'ps10n'
    }
    baseName = project.name + '-all'
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
            {
                exclude "META-INF/*.SF"
                exclude "META-INF/*.DSA"
                exclude "META-INF/*.RSA"
                exclude "META-INF/*.txt"
                exclude "*.class"
                exclude "META-INF/DEPENDENCIES"
                exclude "META-INF/*"
                exclude "META-INF/cxf/*.txt"
            }
    with jar
}